/*
//Tang, Chen
//Jan 17 2019
 * ChoiceDoSurvey form
 * This form allows users to select a survey to make a response.
 * Using a combo box, users can select a survey, and press "Start" to complete the survey.
 */
package finalproject.tang.chen;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author Albert
 */
public class ChoiceDoSurvey extends javax.swing.JFrame {

    DoSurvey doSurvey;
    FillSurvey fillSurvey;

    /**
     * Creates the ChoiceDoSurvey form
     *
     * @param doSurvey - the parent form
     */
    public ChoiceDoSurvey(DoSurvey doSurvey) {
        initComponents();
        this.doSurvey = doSurvey;

        getContentPane().setBackground(new Color(153, 204, 255));

        //Adds the survey titles to the combo box for users to choose from
        setExistingSurvey();

    }

    /**
     * This method will read the file containing all the survey names and add
     * them to the combo box for the user to be able to choose from
     */
    public void setExistingSurvey() {
        try {
            //Set reader to the file with all the survey names
            FileReader fr = new FileReader("src\\finalproject\\tang\\chen\\SurveyStorage");
            BufferedReader br = new BufferedReader(fr);

            boolean eof = false;

            while (!eof) {

                //Read the line for a title of a survey
                String title = br.readLine();

                //If the line is empty, the end of the file is reached
                if (title == null) {
                    eof = true;

                } else {
                    //Otherwise, add the title of the survey to the combo box of survey names
                    cboDoSurvey.addItem(title);
                }
            }

            br.close();
        } catch (IOException e) {
            System.out.println("ERROR " + e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChoiceDoSurvey = new javax.swing.JLabel();
        cboDoSurvey = new javax.swing.JComboBox<>();
        btnStart = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChoiceDoSurvey.setText("What Is The Survey You Like To Do?");

        btnStart.setBackground(new java.awt.Color(255, 212, 26));
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 212, 26));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(lblChoiceDoSurvey)))
                        .addGap(0, 105, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cboDoSurvey, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblChoiceDoSurvey)
                .addGap(41, 41, 41)
                .addComponent(cboDoSurvey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnStart)
                .addGap(28, 28, 28)
                .addComponent(btnBack)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * When the "Back" button is pressed
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //Change visibility to go back to parent form (DoSurvey form)
        doSurvey.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * When the "Start" button is pressed
     */
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        //Get the selected name of the survey from the combo box
        String fileName = cboDoSurvey.getSelectedItem().toString();

        //If no FillSurvey form exists, create a new one
        if (fillSurvey == null) {
            //Pass the survey name into creation of FillSurvey
            fillSurvey = new FillSurvey(this, fileName);
        }

        //Change visibility to go to the respective form based on user selection
        fillSurvey.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnStartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnStart;
    private javax.swing.JComboBox<String> cboDoSurvey;
    private javax.swing.JLabel lblChoiceDoSurvey;
    // End of variables declaration//GEN-END:variables
}
